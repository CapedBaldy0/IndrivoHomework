@inherits LayoutComponentBase

@inject ICookie cookieHelper

<MudThemeProvider @ref="@_mudThemeProvider" IsDarkMode="@_isDarkMode" IsDarkModeChanged="((bool value) => ThemeChanged(value))" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                             Icon="@Icons.Material.Filled.WbSunny" Title="Switch to Dark Theme"
                             ToggledIcon="@Icons.Material.Filled.DarkMode" ToggledTitle="Switch to Light Theme" />
        <AuthorizeView>
            <Authorized>

            </Authorized>
            <NotAuthorized>
                <MudButton Class="mx-3" Variant="Variant.Text" Href="/login">Sign In</MudButton>
                <MudButton Variant="Variant.Outlined" Href="/signup">Sign Up</MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Indrivo Homework</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code
{
    bool _drawerOpen = true;

    private bool _isDarkMode;
    private MudThemeProvider? _mudThemeProvider;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var theme = await cookieHelper.GetValue("theme");

            if (string.IsNullOrEmpty(theme))
            {
                _isDarkMode = _mudThemeProvider != null ? await _mudThemeProvider.GetSystemPreference() : false;
            }
            else
            {
                _isDarkMode = theme == "dark" ? true : false;
            }

            StateHasChanged();
        }
    }

    private async Task ThemeChanged(bool isDarkMode)
    {
        _isDarkMode = isDarkMode;

        await cookieHelper.SetValue("theme", isDarkMode ? "dark" : "light");
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}